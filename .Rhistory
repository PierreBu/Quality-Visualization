input$minus
class(input$minus)
str(input$minus)
str(session)
session$input
input
class(input$minus)
input
class(input)
str(input)
input$impl
names(input)
names(str(input))
test <- list(a = 1, b = 2)
test
str(test)
test$a
input$impl
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
input
input[["sel_0"]]
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
input[["tetetetete"]] <- 0
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
private$value
private$value
private$id
paste0("sel_", private$id)
paste0("sel_", private$id - 1)
paste0("sel_", private$id - 1)
paste0("sel_", private$id)
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
test <- UIManager$new)()
test <- UIManager$new()
UIManager <- R6::R6Class(
public = list(
initialize = function() {
private$sel_ids = 1
},
# addSelectInput = function(id, input) {
#   browser()
#   private$sel_ids <- c(private$sel_ids, id)
#   insertUI(selector = "#placeholder",
#            where = "afterEnd",
#            ui = tags$div(selectInput(paste0("sel_", id), paste0("Model", id), choices = c("test_1", "test_2")),
#                          id = id),
#            immediate = TRUE)
#   observeEvent(input[[paste0("sel_", id)]],
#                {print(1)}, ignoreInit = FALSE)
# },
# rmSelectInput = function(id) {
#   private$sel_ids <- private$sel_ids[-which(private$sel_ids == id)]
#   removeUI(selector = paste0('#', id), immediate = TRUE)
# },
getSelectInput = function() {
return(private$sel_ids)
}
),
private = list(
sel_ids = NULL
)
)
test <- UIManager$new()
test
test$getSelectInput()
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
private$sel_ids
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/UIManager_test.R')
c(1,2,3)[NULL]
c(1,2,3)
c(1,2,3)[]
index <- ""
c(1,2,3)[index]
index <- NULL
c(1,2,3)[index]
read.table(file = "C:\Users\pierr\Desktop\IPGP\Articles\Clara Waelkens\Stat_Clara.csv", header = TRUE, sep = ";")
read.table(file = "C:/Users/pierr/Desktop/IPGP/Articles/Clara Waelkens/Stat_Clara.csv", header = TRUE, sep = ";")
data <- read.table(file = "C:/Users/pierr/Desktop/IPGP/Articles/Clara Waelkens/Stat_Clara.csv", header = TRUE, sep = ";")
data
data[, Be]
data[, Br]
data[, "Br""]
data[, "Br]
data[, "Br"]
data[, "Provenance"]
data[data[, "Provenance"] == "Base LBT Plinian", ]
data[data[, "Provenance"] == "Base LBT Plinian", "F"]
data[data[, "Provenance"] == "Top LBT Plinian", "F"]
wilcox.test(data[data[, "Provenance"] == "Base LBT Plinian", "F"] ~ data[data[, "Provenance"] == "Top LBT Plinian", "F"])
f_base <- data[data[, "Provenance"] == "Base LBT Plinian", "F"]
f_top <- data[data[, "Provenance"] == "Top LBT Plinian", "F"]
wilcox.test(f_base ~ f_top)
wilcox.test(f_base ~ f_top[-1])
f_top[-1]
wilcox.test(f_base, f_top)
Cl_base <- data[data[, "Provenance"] == "Base LBT Plinian", "F"]
Cl_top <- data[data[, "Provenance"] == "Top LBT Plinian", "F"]
Cl_base <- data[data[, "Provenance"] == "Base LBT Plinian", "Cl"]
Cl_top <- data[data[, "Provenance"] == "Top LBT Plinian", "Cl"]
wilcox.test(Cl_base, Cl_top)
Br_base <- data[data[, "Provenance"] == "Base LBT Plinian", "Br"]
Br_top <- data[data[, "Provenance"] == "Top LBT Plinian", "Br"]
wilcox.test(Br_base, Br_top)
Br_first <- data[data[, "Provenance"] == "First Erupted VTM", "Br"]
Cl_first <- data[data[, "Provenance"] == "First Erupted VTM", "Cl"]
F_first <- data[data[, "Provenance"] == "First Erupted VTM", "F"]
wilcox.test(Br_first, Br_top)
wilcox.test(Br_top, Br_first)
wilcox.test(Cl_top, Cl_first)
wilcox.test(f_top, F_first)
F_post <- data[data[, "Provenance"] == "Post-replenishment VTM", "F"]
Cl_post <- data[data[, "Provenance"] == "Post-replenishment VTM", "Cl"]
Br_post <- data[data[, "Provenance"] == "Post-replenishment VTM", "Br"]
wilcox.test(F_post, F_first)
wilcox.test(Cl_post, Cl_first)
wilcox.test(Br_post, Br_first)
Br_base <- data[data[, "Provenance"] == "Base UBT plinian", "Br"]
Cl_base <- data[data[, "Provenance"] == "Base UBT plinian", "Cl"]
F_base <- data[data[, "Provenance"] == "Base UBT plinian", "F"]
wilcox.test(Br_post, Br_base)
wilcox.test(F_post, F_base)
wilcox.test(Cl_post, Cl_base)
F_top <- data[data[, "Provenance"] == "Top UBT plinian", "F"]
Cl_top <- data[data[, "Provenance"] == "Top UBT plinian", "Cl"]
Br_top <- data[data[, "Provenance"] == "Top UBT plinian", "Br"]
wilcox.test(Cl_top, Cl_base)
wilcox.test(F_top, F_base)
wilcox.test(Br_top, Br_base)
data <- read.table(file = "C:/Users/pierr/Desktop/IPGP/Articles/Clara Waelkens/Stat_Clara.csv", header = TRUE, sep = ";")
data
Br_deer <- data[data[, "Provenance"] == "Deer Canyon Rhyolite", "Br"]
Cl_deer <- data[data[, "Provenance"] == "Deer Canyon Rhyolite", "Cl"]
F_deer <- data[data[, "Provenance"] == "Deer Canyon Rhyolite", "F"]
wilcox.test(Br_top, Br_deer)
wilcox.test(Cl_top, Cl_deer)
wilcox.test(F_top, F_deer)
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
Concentration
Signal
eCalibrationData
View(StdDataframe)
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
Stat_Clara <- read.csv("C:/Users/pierr/Desktop/IPGP/Articles/Clara Waelkens/Stat_Clara.csv", sep=";")
View(Stat_Clara)
Stat_Clara[,Provenance] = "Base LBT Plinian"
Stat_Clara[,Provenance]
Stat_Clara[,"Provenance"]
Stat_Clara[Stat_Clara$Provenance == "Base LBT Plinian",]
Stat_Clara[Stat_Clara$Provenance == "Base LBT Plinian",]$F
F_Base <- Stat_Clara[Stat_Clara$Provenance == "Base LBT Plinian",]$F
F_Top <- Stat_Clara[Stat_Clara$Provenance == "Top LBT Plinian",]$F
wilcox.test(F_Base, F_Top)
wilcox.test(rnorm(n = 200, mean = 0, sd = 1), rnorm(n = 200, mean = 0, sd = 1))
wilcox.test(rnorm(n = 200, mean = 0, sd = 1), 2+rnorm(n = 200, mean = 0, sd = 1))
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
View(m)
colnames(m)
row.names(m)
View(m)
row.names(m) <- c("row1", "row2")
row.names(m)
View(m)
c("test1", "test2", "test3") %in% c("test1", "test2", "test3", "test4")
c("test1", "test2", "test3", "test5") %in% c("test1", "test2", "test3", "test4")
c("test1", "test2", "test3", "test5") == c("test1", "test2", "test3", "test4")
c("test1", "test2", "test3", "test5") == c("test1", "test2", "test3", "test4", "test3")
"test1" == c("test1", "test2", "test3", "test4")
grep(c("test1", "test2", "test3", "test5"), c("test1", "test2", "test3", "test4", "test3")
)
grep("test1", c("test1", "test2", "test3", "test4", "test3"))
grep("test6", c("test1", "test2", "test3", "test4", "test3"))
apply(Br_base, Br_deer, grep)
apply(c(1,2,3), c(3,4,5), grep)
apply()
sample(1:10)
sample(1:3,10)
sample(1:3,10,replace = TRUE)
match(c(1,4), sample(1:10))
x <- sample(1:10)
x
match(c(1,4), sample(1:10))
match(c(1,4), x)
esm <- c("BHVO2", "BEN")
certif <- ("BHVO2", "AGV2"")
certif <- c("BHVO2", "AGV2")
esm
cerif
certif
match(esm, certif)
certif(certif, "BEN")
certif <- c(certif, "BEN")
match(esm, certif)
matrix(c(1,2,3,4), 2,2)
matrix(c(1,2,3,4), 2,2)[c(1,NA)]
matrix(c(1,2,3,4), 2,2)[c(1,NA),]
esm
certif
esm <- c(esm, "BIR2")
testMatrix <- matrix(data = 1:9, 3,3)
testMatrix
match(esm, certif)
certif(match(esm, certif))
testMatrix[match(esm, certif),]
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
pdf('eg.pdf', width = 8.3, height = 11.7)  ## Device with dimensions of A4 paper
par(omi = rep(.5, 4))                      ## 1/2 inch outer margins
par(mfrow = c(3,2))                        ## 2x3 grid of plotting areas
replicate(plot(rnorm(99)), n = 6)          ## 6 example plots
dev.off()
pdf('eg.pdf', width = 8.3, height = 11.7)
par(omi = rep(.5, 4))
par(mfrow = c(3,2))
replicate(plot(rnorm(99)), n = 6)
dev.off()
library(imguR)
install.packages("imguR")
library(imguR)
pdf('eg.pdf', width = 8.3, height = 11.7)  ## Device with dimensions of A4 paper
par(omi = rep(.5, 4))                      ## 1/2 inch outer margins
par(mfrow = c(3,2))                        ## 2x3 grid of plotting areas
replicate(plot(rnorm(99)), n = 6)          ## 6 example plots
dev.off()
imguR()
plot(x=1:10, y=-1:-10, col=1:10, pch=19, main="oh hai dere")
cat(dev.off())
pdf("testplot.pdf", width=12, height=9, fonts=12)
plot(1:10, rnorm(10, 0, 5))
dev.off()
plot(1:10, rnorm(10, 0, 5))
png("testplot2.png", width=3, height=3, units="in", pointsize=12, res=300)
plot(1:10, rnorm(10, 0, 5))
dev.off()
Sys.time()
make.names(Sys.time())
paste("Quality_Plot_", make.names(Sys.time()))
paste("Quality_Plot_", make.names(Sys.time()), sep = "")
plot(c(1,4,6))
x <- c(2,8,11,19)
x <- data.frame(x,1) ## 1 is your "height"
x
plot(x, type = 'o', pch = '|', ylab = '')
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
data.frame(c(1,2,3), 1)
data.frame(c(1,NA,3), 1)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
adaptedReferenceMx[, i]
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
adaptedReferenceMx[, i]
data.frame(adaptedReferenceMx[, i], 1)
plot(plotDf, type = "o", pch = "|", ylab = "")
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
plot(plotDf, type = "o", pch = "|", ylab = "")
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
data.frame(adaptedReferenceMx[, i], 1)
plot(plotDf, type = "o", pch = "|", ylab = "")
plot(plotDf, type = "o", pch = "|", ylab = "")
plotDf
library(ggplot2)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
ggplot(plotDf)name
name
data.frame(name, 1)
adaptedReferenceMx$name
adaptedReferenceMx[,name]
name = adaptedReferenceMx[,name]
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
plotDf
data.frame(adaptedReferenceMx[, name], height = 1)
adaptedReferenceMx[, name]
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
plotDf
names(plotDf) <- c(name, "height")
plotDf
install.packages(cowplot)
install.packages("cowplot")
p1 <- ggplot(mtcars, aes(disp, mpg)) +
geom_point()
p2 <- ggplot(mtcars, aes(qsec, mpg)) +
geom_point()
myPlotList <- list(p1, p2)
plot_grid(plotlist  = myPlotList, labels = c('A', 'B'))
library(cowplot)
plot_grid(plotlist  = myPlotList, labels = c('A', 'B'))
plot_grid(p1, p2, labels = c('A', 'B'))
p1
ggplot()
print(p1)
show(p1)
mtcars
p1 <- ggplot(mtcars, aes(disp, mpg)) + geom_point()
p1
show(p1)
sum(c(TRUE, FALSE, TRUE))
myList <- list(c(1,2,3), c(4,5,6))
myList
names(myList)
attr(myList)
attributes(myList)
str(myList)
str(str(myList))
myList <- list(c(1,2,3), c(4,5,6), c(7,8))
myList[[2]] <- NULL
myList
seq(myList)
max(myList)
length(myList)
myList <- list()
length(myList)
myDf <- as.data.frame(matrix(0, nrow = 3, ncol = 3))
myDf
colnames(myDf) <- c("Li", "Be", "B")
myFd
myDf
row.names(myDf) <- c("Smp1", "Smp2", "Smp3")
myDf
c(1,2,3) / c(4,5,6)
sd(c(1,2,3) / c(4,5,6))
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
index$custom[[input$correctionIndex]]
input$interferedElement
input$interferingElement
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
ratio_cor_b_values[correctionIndex,
interferedElement]/ratio_cor_b_values[correctionIndex, interferingElement]
ratio_cor_b_values[correctionIndex,
+                    interferedElement]
ratio_cor_b_values[correctionIndex, interferedElement]
ratio_cor_b_values[, interferedElement]
interferedElement
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
correctionFactorValue
View(zeroDf)
interferenceRSD
ratio_cor_b_RSD[,
interferingElement]/100
ratio_cor_b_RSD
myList(c(1,2), c(2,3))
myList<- list(c(1,2), c(2,3))
myList
names(myList)
myList<- list(a = c(1,2), b = c(2,3))
names(myList)
as.data.frame(a = c(1,2,3))
as.data.frame(c(1,2,3))
data.frame(a = c(1,2,3))
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
1 %in% c(1,2,3)
4 %in% c(1,2,3)
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
names(elementCorrections)
ratio_cor_b_e
class(ratio_cor_b_e)
print(s)
elementCorrections[[s]]
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
correctionIndex
ratio_cor_b_values[correctionIndex,
interferedElement]
ratio_cor_b_values[correctionIndex,
interferedElement]/ratio_cor_b_values[correctionIndex, interferingElement]
correctionFactorValue
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
Inf
sqrt((Inf/100 * 0) ^2 + (Inf/100 * 0)^2)/0*100
source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
NaN
is.infinite(Inf)
is.infinite(matrix(Inf, nrow =3, ncol =3))
is.infinite(as.data.frame(matrix(Inf, nrow =3, ncol =3)))
as.data.frame(matrix(Inf, nrow =3, ncol =3))
class(as.data.frame(matrix(Inf, nrow =3, ncol =3)))
df <- as.data.frame(matrix(Inf, nrow =3, ncol =3))
is.infinite(df)
library(shiny); source('C:/Users/pierr/Desktop/IPGP/R/ICP-MS_process/ICPMS_Process_Current_Stable.R')
ratio_cor_b_values[correctionIndex,
interferedElement]
ratio_cor_b_values[correctionIndex, interferingElement]
correctionFactorValue
correctionFactorRSD
interferenceValue
ratio_cor_b_values[correctionIndex, interferedElement]
ratio_cor_b_values[correctionIndex, interferingElement]
correctionFactorValue
correctionFactorRSD
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
n
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
adaptedReferenceMx
View(adaptedReferenceMx)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
View((reactiveMatrixes$estimated)
q
View(reactiveMatrixes$estimated)
View(reactiveMatrixes$reference)
library(shiny); runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
adaptedReferenceMx
"w" - 1
NaN - 1
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
View(adaptedReferenceMx)
View(reactiveMatrixes$estimated)
reactiveMatrixes$estimated - adaptedReferenceMx
as.numeric("tet")
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
reactiveMatrixes$estimated
View(reactiveMatrixes$estimated)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
concentrationDf
concentrationMatrix
concentrationMatrix
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
class(concentrationMatrix)
typeof(concentrationMatrix)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
concentrationMatrix
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
concentrationMatrix
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
concentrationMatrix
class(concentrationMatrix)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
concentrationMatrix
View(reactiveMatrixes$estimated)
View(reactiveMatrixes$reference)
View(adaptedReferenceMx)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
View(adaptedReferenceMx)
View(deviationMx)
install.packages("patchwork")
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
myList <- list()
myList <- list()
myList[["t1"]] <- 2
myList[["t2"]] <- 4
sum(myList)
lapply(myList, sum)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
print()
print(wrap_plots(myPlotList))
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
print(wrap_plots(myPlotList))
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
10%2
10 % 2
10 // 2
10%%2
11/2
ceil(11/2)
ceiling(11/2)
ceiling(10/2)
runApp('C:/Users/pierr/Desktop/IPGP/R/VisualisationQualiteAnalyse/vizQ.R')
